// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"sync"
)

// ConfigMock is a mock implementation of server.Config.
//
// 	func TestSomethingThatUsesConfig(t *testing.T) {
//
// 		// make and configure a mocked server.Config
// 		mockedConfig := &ConfigMock{
// 			GetTaskCommandFunc: func(name string) (string, bool) {
// 				panic("mock out the GetTaskCommand method")
// 			},
// 		}
//
// 		// use mockedConfig in code that requires server.Config
// 		// and then make assertions.
//
// 	}
type ConfigMock struct {
	// GetTaskCommandFunc mocks the GetTaskCommand method.
	GetTaskCommandFunc func(name string) (string, bool)

	// calls tracks calls to the methods.
	calls struct {
		// GetTaskCommand holds details about calls to the GetTaskCommand method.
		GetTaskCommand []struct {
			// Name is the name argument value.
			Name string
		}
	}
	lockGetTaskCommand sync.RWMutex
}

// GetTaskCommand calls GetTaskCommandFunc.
func (mock *ConfigMock) GetTaskCommand(name string) (string, bool) {
	if mock.GetTaskCommandFunc == nil {
		panic("ConfigMock.GetTaskCommandFunc: method is nil but Config.GetTaskCommand was just called")
	}
	callInfo := struct {
		Name string
	}{
		Name: name,
	}
	mock.lockGetTaskCommand.Lock()
	mock.calls.GetTaskCommand = append(mock.calls.GetTaskCommand, callInfo)
	mock.lockGetTaskCommand.Unlock()
	return mock.GetTaskCommandFunc(name)
}

// GetTaskCommandCalls gets all the calls that were made to GetTaskCommand.
// Check the length with:
//     len(mockedConfig.GetTaskCommandCalls())
func (mock *ConfigMock) GetTaskCommandCalls() []struct {
	Name string
} {
	var calls []struct {
		Name string
	}
	mock.lockGetTaskCommand.RLock()
	calls = mock.calls.GetTaskCommand
	mock.lockGetTaskCommand.RUnlock()
	return calls
}
